# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          # - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      _R_REMOTES_NO_ERRORS_FROM_WARNINGS_: true
      _R_CHECK_FORCE_SUGGESTS_: false
      _R_CHECK_TIMINGS_: 10
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CI: true
      SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
      DISPLAY: ":99"

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-tinytex@main

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install mac OS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz

      - name: Install dependencies
        run: |
          install.packages('curl')
          install.packages('devtools')
          install.packages('spelling')
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_github('yihui/tinytex')
          install.packages('tinytex')
          tinytex::parse_install(text = "! LaTeX Error: File `pdfpages.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `ae.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `pdflscape.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `thumbpdf.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `subcaption.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `float.sty' not found.")
          tinytex::parse_install(text = "! LaTeX Error: File `xcolor.sty' not found.")
        shell: Rscript {0}

      # - name: Compact PDF in macOS
      #   if: runner.os == 'macOS'
      #   run: |
      #     tools::compactPDF(paths = "./inst/doc", gs_quality = "ebook")
      #   rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check", build_args = '--compact-vignettes="both"')

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          devtools::check(args = c('--as-cran'), build_args = c('--compact-vignettes=both'))
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
